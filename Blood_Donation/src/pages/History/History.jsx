import React, { useEffect, useState } from "react";
import styles from "./styles.module.scss";
import { Button as CustomButton } from "../../components/Button/Button";
import calendarImg from "../../assets/calendar.png";
import api from "../../configs/axios";
import { useSelector } from "react-redux";
import { Spin, Empty, Tag } from "antd";

export const History = () => {
  const { container, image, title, message, historyList, card, infoRow } =
    styles;
  const user = useSelector((state) => state.user);
  const [appointments, setAppointments] = useState([]);
  const [loading, setLoading] = useState(false);

  const statusColor = {
    PENDING: "orange",
    APPROVED: "green",
    FULFILLED: "blue",
    CANCELLED: "red",
    REJECTED: "volcano",
  };

  const statusLabel = {
    PENDING: "ƒêang ch·ªù",
    APPROVED: "ƒê√£ duy·ªát",
    FULFILLED: "ƒê√£ hi·∫øn",
    CANCELLED: "ƒê√£ h·ªßy",
    REJECTED: "B·ªã t·ª´ ch·ªëi",
  };

  useEffect(() => {
    const fetchHistory = async () => {
      setLoading(true);
      try {
        const res = await api.get("/appointments/history", {
          params: { userId: user.userID },
        });
        setAppointments(res.data);
      } catch (err) {
        console.error("L·ªói l·∫•y l·ªãch s·ª≠:", err);
      } finally {
        setLoading(false);
      }
    };

    if (user.userID) {
      fetchHistory();
    }
  }, [user.userID]);

  return (
    <div className={container}>
      <h1 className={title}>L·ªãch s·ª≠ ƒë·∫∑t h·∫πn hi·∫øn m√°u</h1>

      {loading ? (
        <Spin />
      ) : appointments.length === 0 ? (
        <>
          <img src={calendarImg} alt="Calendar" className={image} />
          <p className={message}>Hi·ªán t·∫°i b·∫°n ch∆∞a c√≥ l·ªãch h·∫πn n√†o.</p>
          <CustomButton content="ƒê·∫∑t l·ªãch ngay" to="/user/donate" />
        </>
      ) : (
        <div className={historyList}>
          {appointments.map((item) => (
            <div className={card} key={item.id}>
              <div className={infoRow}>
                <strong>Ng√†y h·∫πn:</strong> {item.date}
              </div>
              <div className={infoRow}>
                <strong>ƒê·ªãa ƒëi·ªÉm:</strong> {item.address}
              </div>
              <div className={infoRow}>
                <strong>Th·ªùi gian:</strong> {item.timeRange}
              </div>
              <div className={infoRow}>
                <strong>Tr·∫°ng th√°i:</strong>{" "}
                <Tag color={statusColor[item.status]}>
                  {statusLabel[item.status]}
                </Tag>
              </div>

              {/* üéØ TH√äM PH·∫¶N NH·∫ÆC NH·ªû / C·∫¢M ∆†N */}
              {item.status === "APPROVED" && (
                <p
                  style={{
                    color: "#faad14",
                    fontStyle: "italic",
                    marginTop: 8,
                  }}
                >
                  ‚ö†Ô∏è Vui l√≤ng ƒë·∫øn ƒë√∫ng gi·ªù ƒë·ªÉ ho√†n th√†nh hi·∫øn m√°u.
                </p>
              )}
              {item.status === "FULFILLED" && (
                <p
                  style={{
                    color: "#52c41a",
                    fontStyle: "italic",
                    marginTop: 8,
                  }}
                >
                  üéâ C·∫£m ∆°n b·∫°n ƒë√£ hi·∫øn m√°u! H√£y ngh·ªâ ng∆°i v√† tr·ªü l·∫°i sau 10‚Äì14
                  ng√†y n·∫øu mu·ªën ti·∫øp t·ª•c ƒë√≥ng g√≥p üíñ
                </p>
              )}
            </div>
          ))}
        </div>
      )}
    </div>
  );
};
